// <auto-generated />
using System;
using System.Collections.Generic;
using FMECA.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FMECA.Infrastructure.Migrations
{
    [DbContext(typeof(FMECAContext))]
    [Migration("20230115130638_InitialFMECAMigration")]
    partial class InitialFMECAMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FMECA.Domain.Entities.FMECA", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("FMECANumber")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FMECAStatus")
                        .HasColumnType("integer");

                    b.Property<int>("FMECAType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCriticalRisk")
                        .HasColumnType("boolean");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProcessFMECAType")
                        .HasColumnType("integer");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("ProjectID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("RefrenceFMECANumber")
                        .HasColumnType("text");

                    b.Property<string>("TopLevelPartDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TopLevelPartNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID", "FMECANumber");

                    b.ToTable("FMECA");
                });

            modelBuilder.Entity("FMECA.Domain.Entities.FMECAReport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("ReportColumn")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("FMECAReport");
                });

            modelBuilder.Entity("FMECA.Domain.Entities.PartRisk", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FMECAID")
                        .HasColumnType("integer");

                    b.Property<string>("FMECANumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FMECANumber1")
                        .HasColumnType("text");

                    b.Property<int>("PartLevel")
                        .HasColumnType("integer");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SequenceId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("FMECAID", "FMECANumber1");

                    b.ToTable("PartRisk");
                });

            modelBuilder.Entity("FMECA.Domain.Entities.PartRiskColumnDefinition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("ColumnName")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<int>("FMECAType")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID", "ColumnName", "FMECAType");

                    b.ToTable("PartRiskColumnDefinition");
                });

            modelBuilder.Entity("FMECA.Domain.Entities.ProcessRisk", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FMECAID")
                        .HasColumnType("integer");

                    b.Property<string>("FMECANumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FMECANumber1")
                        .HasColumnType("text");

                    b.Property<string>("ProcessId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProcessLevel")
                        .HasColumnType("integer");

                    b.Property<int>("SequenceID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("FMECAID", "FMECANumber1");

                    b.ToTable("ProcessRisk");
                });

            modelBuilder.Entity("FMECA.Domain.Entities.PartRisk", b =>
                {
                    b.HasOne("FMECA.Domain.Entities.FMECA", null)
                        .WithMany("PartRisk")
                        .HasForeignKey("FMECAID", "FMECANumber1");
                });

            modelBuilder.Entity("FMECA.Domain.Entities.ProcessRisk", b =>
                {
                    b.HasOne("FMECA.Domain.Entities.FMECA", null)
                        .WithMany("ProcessRisk")
                        .HasForeignKey("FMECAID", "FMECANumber1");
                });

            modelBuilder.Entity("FMECA.Domain.Entities.FMECA", b =>
                {
                    b.Navigation("PartRisk");

                    b.Navigation("ProcessRisk");
                });
#pragma warning restore 612, 618
        }
    }
}
